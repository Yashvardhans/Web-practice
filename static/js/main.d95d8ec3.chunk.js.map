{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","props","_useState","useState","_useState2","Object","slicedToArray","movies","setMovies","useEffect","_fetchData","asyncToGenerator","_regeneratorRuntime","mark","_callee","request","wrap","_context","prev","next","get","url","sent","data","results","abrupt","stop","apply","this","arguments","fetchData","react_default","a","createElement","className","title","map","movie","key","id","concat","isLargeRow","src","poster_path","backdrop_path","alt","name","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumantaries","Banner","Nav","App","src_Nav","src_Banner","src_Row","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d95d8ec3.chunk.js","sourcesContent":["import axios from \"axios\" ; \r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3',\r\n})\r\n\r\nexport default  instance ;","import React , { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\" ;\r\nimport './Row.css'\r\n\r\nfunction Row(props) {\r\n    \r\n    const base_url = \"http://image.tmdb.org/t/p/w500//\"\r\n\r\n    const [movies , setMovies] = useState([])\r\n\r\n    useEffect (() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(props.url);\r\n            setMovies(request.data.results);\r\n            \r\n            return request;\r\n        }\r\n        fetchData();\r\n\r\n    } , [props.url]);\r\n    \r\n    \r\n\r\n\r\n\r\n    return (\r\n        <div className=\"row\">\r\n             \r\n            <h2 className=\"title\">{props.title}</h2>\r\n            <div className=\"row-posters\">\r\n                 {movies.map( movie => (\r\n                    <img \r\n                    key={movie.id}\r\n                    className={`row-poster ${props.isLargeRow && \"row-posterLarge\"}`}\r\n                    src={`${(base_url+ (props.isLargeRow ? movie.poster_path : movie.backdrop_path))}`} alt = {movie.name}/>\r\n\r\n                 )\r\n\r\n                 )}\r\n                 \r\n                 \r\n             </div>\r\n            {/* <div>{props.url}</div> */}\r\n          \r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Row;","const API_KEY = \"500179a347e1027821840c9690d80634\" ;\r\n\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumantaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n  }\r\n  \r\n  export default requests ;","import React  , {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport './Banner.css' ;\r\n\r\nfunction Banner(props) {\r\n//  const [movie,setMovie] = useState([])\r\n\r\n//  useEffect(() => {\r\n//     async function fetchData(){\r\n//       const request = await axios.get(props.url);\r\n      \r\n//      setMovie(\r\n//       request.data.results[\r\n//         Math.floor(Math.random() * request.data.results.length - 1)\r\n//       ]\r\n//      )\r\n//      return request;\r\n//     }\r\n//     fetchData();\r\n//   }, [])\r\n\r\n\r\n//  console.log(movie)\r\n \r\n\r\n    return (\r\n     <div className='banner'>\r\n\r\n     </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\nimport './Nav.css'\r\n\r\nfunction Nav(props) {\r\n    return (\r\n        <div className='nav'>\r\n         <img \r\n            className='nav__logo'\r\n            src='/logo.png'\r\n            alt='Netfilx Logo'\r\n         /> \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\"\nimport './App.css';\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from './Banner';\nimport Nav from './Nav';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav/>\n      <Banner url = {requests.fetchNetflixOriginals}/>\n      <Row \n      title = \"Netfilx Originals\" \n      url = {requests.fetchNetflixOriginals}\n      isLargeRow \n\n      />\n      <Row title = \"Trending Now\" url = {requests.fetchTrending}/>\n      <Row title = \"Top Rated\" url = {requests.fetchTopRated}/>\n      <Row title = \"Action Movies\" url = {requests.fetchActionMovies}/>\n      <Row title = \"Comedy Movies\" url = {requests.fetchComedyMovies}/>\n      <Row title = \"Horror Movies\" url = {requests.fetchHorrorMovies}/>\n      <Row title = \"Documentaries\" url = {requests.fetchDocumantaries}/>\n      <Row title = \"Rowmance Movies\" url = {requests.fetchRomanceMovies}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}